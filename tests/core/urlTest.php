<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-18 at 22:12:07.
 */
class UrlTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var Url
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Url;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * Generated from @assert (array('module' => 'mymodule', 'id' => 1)) [==] "?_module=test&amp;_page=1&amp;_sort=id&amp;module=mymodule&amp;id=1" [[$_GET = array('module' => 'test', 'page' => 1, 'sort' => 'id')]].
	 *
	 * @covers Url::replace
	 */
	public function testReplace()
	{
		$_GET = array('module' => 'test', 'page' => 1, 'sort' => 'id');
		$this->assertEquals(
		"?_module=test&amp;_page=1&amp;_sort=id&amp;module=mymodule&amp;id=1", \Url::replace(array('module' => 'mymodule', 'id' => 1))
		);
	}

	/**
	 * Generated from @assert (array(2 => 'module=retmodule')) [==] "?module=retmodule&amp;page=1&amp;sort=id"  [[$_GET = array('_module' => 'test', '_page' => 1, '_sort' => 'id')]].
	 *
	 * @covers Url::back
	 */
	public function testBack()
	{
		$_GET = array('_module' => 'test', '_page' => 1, '_sort' => 'id');
		$this->assertEquals(
		"?module=retmodule&amp;page=1&amp;sort=id", \Url::back(array(2 => 'module=retmodule'))
		);
	}

	/**
	 * Generated from @assert ('module=retmodule') [==] "?module=retmodule&amp;page=1&amp;sort=id" [[$_GET = array('_module' => 'test', '_page' => 1, '_sort' => 'id')]].
	 *
	 * @covers Url::back
	 */
	public function testBack2()
	{
		$_GET = array('_module' => 'test', '_page' => 1, '_sort' => 'id');
		$this->assertEquals(
		"?module=retmodule&amp;page=1&amp;sort=id", \Url::back('module=retmodule')
		);
	}

	/**
	 * Generated from @assert ('index.php', array('id'=>1)) [==] "index.php?id=1&module=test&page=1&sort=id"  [[$_POST = array('_module' => 'test', '_page' => 1, '_sort' => 'id')]].
	 *
	 * @covers Url::postBack
	 */
	public function testPostBack()
	{
		$_POST = array('_module' => 'test', '_page' => 1, '_sort' => 'id');
		$this->assertEquals(
		"index.php?id=1&module=test&page=1&sort=id", \Url::postBack('index.php', array('id' => 1))
		);
	}

	/**
	 * Generated from @assert ('index.php', array('page'=>2, 'module'=>'mymodule')) [==] "index.php?page=2&module=mymodule&sort=id"  [[$_POST = array('_module' => 'test', '_page' => 1, '_sort' => 'id')]].
	 *
	 * @covers Url::postBack
	 */
	public function testPostBack2()
	{
		$_POST = array('_module' => 'test', '_page' => 1, '_sort' => 'id');
		$this->assertEquals(
		"index.php?page=2&module=mymodule&sort=id", \Url::postBack('index.php', array('page' => 2, 'module' => 'mymodule'))
		);
	}

	/**
	 * Generated from @assert (array('action'=> 'one', 'visited')) [==] "?action=one&amp;visited".
	 *
	 * @covers Url::next
	 */
	public function testNext()
	{

		$this->assertEquals(
		"?action=one&amp;visited", \Url::next(array('action' => 'one', 'visited'))
		);
	}

	/**
	 * Generated from @assert ('home', 'ทดสอบ', 1, 1, 'action=login&amp;true') [==] "http://localhost/home/1/1/%E0%B8%97%E0%B8%94%E0%B8%AA%E0%B8%AD%E0%B8%9A.html?action=login&amp;true".
	 *
	 * @covers Url::create
	 */
	public function testCreate()
	{

		$this->assertEquals(
		"http://localhost/home/1/1/%E0%B8%97%E0%B8%94%E0%B8%AA%E0%B8%AD%E0%B8%9A.html?action=login&amp;true", \Url::create('home', 'ทดสอบ', 1, 1, 'action=login&amp;true')
		);
	}

	/**
	 * Generated from @assert ('home', 'ทดสอบ', 1, 1, 'action=login&amp;true', false) [==] "http://localhost/home/1/1/ทดสอบ.html?action=login&amp;true".
	 *
	 * @covers Url::create
	 */
	public function testCreate2()
	{

		$this->assertEquals(
		"http://localhost/home/1/1/ทดสอบ.html?action=login&amp;true", \Url::create('home', 'ทดสอบ', 1, 1, 'action=login&amp;true', false)
		);
	}

	/**
	 * Generated from @assert ('home', 'ทดสอบ', 1, 1, 'action=login&amp;true') [==] "http://localhost/index.php?module=home-%E0%B8%97%E0%B8%94%E0%B8%AA%E0%B8%AD%E0%B8%9A&amp;cat=1&amp;id=1&amp;action=login&amp;true" [[Config::set('module_url', 0);]].
	 *
	 * @covers Url::create
	 */
	public function testCreate3()
	{
		Config::set('module_url', 0);
		;
		$this->assertEquals(
		"http://localhost/index.php?module=home-%E0%B8%97%E0%B8%94%E0%B8%AA%E0%B8%AD%E0%B8%9A&amp;cat=1&amp;id=1&amp;action=login&amp;true", \Url::create('home', 'ทดสอบ', 1, 1, 'action=login&amp;true')
		);
	}

	/**
	 * Generated from @assert ('home', 'ทดสอบ', 1, 1, 'action=login&amp;true', false) [==] "http://localhost/index.php?module=home-ทดสอบ&amp;cat=1&amp;id=1&amp;action=login&amp;true" [[Config::set('module_url', 0);]].
	 *
	 * @covers Url::create
	 */
	public function testCreate4()
	{
		Config::set('module_url', 0);
		;
		$this->assertEquals(
		"http://localhost/index.php?module=home-ทดสอบ&amp;cat=1&amp;id=1&amp;action=login&amp;true", \Url::create('home', 'ทดสอบ', 1, 1, 'action=login&amp;true', false)
		);
	}

	/**
	 * @covers Url::pagination
	 * @todo   Implement testPagination().
	 */
	public function testPagination()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}
}
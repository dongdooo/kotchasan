<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-12-12 at 22:47:20.
 */
class ArraytoolTest extends PHPUnit_Framework_TestCase
{
	/**
	 * @var Arraytool
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Arraytool;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * Generated from @assert (array('one', 'One', 'two'), 'one') [==] array('one', 'One').
	 *
	 * @covers Arraytool::filter
	 */
	public function testFilter()
	{

		$this->assertEquals(
		array('one', 'One'), \Arraytool::filter(array('one', 'One', 'two'), 'one')
		);
	}

	/**
	 * Generated from @assert ('|', array('a' => 'A', 'b' => array('b', 'B'), 'c' => array('c' => array('c', 'C')))) [==] "A|b|B|c|C".
	 *
	 * @covers Arraytool::toString
	 */
	public function testToString()
	{

		$this->assertEquals(
		"A|b|B|c|C", \Arraytool::toString('|', array('a' => 'A', 'b' => array('b', 'B'), 'c' => array('c' => array('c', 'C'))))
		);
	}

	/**
	 * Generated from @assert (array(0, 1, 2, 3, 4, 5), '0,2') [==] array(1, 3, 4, 5).
	 *
	 * @covers Arraytool::delete
	 */
	public function testDelete()
	{

		$this->assertEquals(
		array(1, 3, 4, 5), \Arraytool::delete(array(0, 1, 2, 3, 4, 5), '0,2')
		);
	}

	/**
	 * Generated from @assert (array(1 => 1, 2 => 2, 3 => 'three'), array(1 => 'one', 2 => 'two')) [==] array(1 => 'one', 2 => 'two', 3 => 'three').
	 *
	 * @covers Arraytool::replace
	 */
	public function testReplace()
	{

		$this->assertEquals(
		array(1 => 'one', 2 => 'two', 3 => 'three'), \Arraytool::replace(array(1 => 1, 2 => 2, 3 => 'three'), array(1 => 'one', 2 => 'two'))
		);
	}

	/**
	 * @covers Arraytool::sort
	 * @todo   Implement testSort().
	 */
	public function testSort()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Arraytool::extract
	 * @todo   Implement testExtract().
	 */
	public function testExtract()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}
}
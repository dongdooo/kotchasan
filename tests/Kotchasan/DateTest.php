<?php

namespace Kotchasan;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-02-19 at 12:23:26.
 */
class DateTest extends \PHPUnit_Framework_TestCase
{
	/**
	 * @var Date
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Date;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{

	}

	/**
	 * Generated from @assert (mktime(0, 0, 0, 2, 29, 2016)) [==]  29.
	 *
	 * @covers Kotchasan\Date::day
	 */
	public function testDay()
	{

		$this->assertEquals(
		29, \Kotchasan\Date::day(mktime(0, 0, 0, 2, 29, 2016))
		);
	}

	/**
	 * Generated from @assert (mktime(0, 0, 0, 2, 29, 2016)) [==]  2.
	 *
	 * @covers Kotchasan\Date::month
	 */
	public function testMonth()
	{

		$this->assertEquals(
		2, \Kotchasan\Date::month(mktime(0, 0, 0, 2, 29, 2016))
		);
	}

	/**
	 * Generated from @assert (mktime(0, 0, 0, 2, 29, 2016)) [==]  2016.
	 *
	 * @covers Kotchasan\Date::year
	 */
	public function testYear()
	{

		$this->assertEquals(
		2016, \Kotchasan\Date::year(mktime(0, 0, 0, 2, 29, 2016))
		);
	}

	/**
	 * Generated from @assert (mktime(0, 0, 0, 2, 1, 2016), mktime(0, 0, 0, 3, 1, 2016)) [==]  array('year' => 0,'month' => 1, 'day' => 0).
	 *
	 * @covers Kotchasan\Date::compare
	 */
	public function testCompare()
	{

		$this->assertEquals(
		array('year' => 0, 'month' => 1, 'day' => 0), \Kotchasan\Date::compare(mktime(0, 0, 0, 2, 1, 2016), mktime(0, 0, 0, 3, 1, 2016))
		);
	}

	/**
	 * Generated from @assert (1453522271) [==]  date('Y-m-d', 1453522271).
	 *
	 * @covers Kotchasan\Date::mktimeToSqlDate
	 */
	public function testMktimeToSqlDate()
	{

		$this->assertEquals(
		date('Y-m-d', 1453522271), \Kotchasan\Date::mktimeToSqlDate(1453522271)
		);
	}

	/**
	 * Generated from @assert (\Kotchasan\Date::mktimeToSqlDateTime(1453522271)) [==] 1453522271.
	 *
	 * @covers Kotchasan\Date::sqlDateTimeToMktime
	 */
	public function testSqlDateTimeToMktime()
	{

		$this->assertEquals(
		1453522271, \Kotchasan\Date::sqlDateTimeToMktime(\Kotchasan\Date::mktimeToSqlDateTime(1453522271))
		);
	}

	/**
	 * @covers Kotchasan\Date::format
	 * @todo   Implement testFormat().
	 */
	public function testFormat()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}

	/**
	 * @covers Kotchasan\Date::mktimeToSqlDateTime
	 * @todo   Implement testMktimeToSqlDateTime().
	 */
	public function testMktimeToSqlDateTime()
	{
		// Remove the following lines when you implement this test.
		$this->markTestIncomplete(
		'This test has not been implemented yet.'
		);
	}
}